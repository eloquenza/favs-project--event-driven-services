<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>demo</artifactId>
        <groupId>edu.hsh.favs.project.escqrs</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.hsh.favs.project.escqrs.events</groupId>
    <artifactId>events</artifactId>

    <dependencies>
        <dependency>
            <groupId>edu.hsh.favs.project.escqrs.domains</groupId>
            <artifactId>customers</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>edu.hsh.favs.project.escqrs.domains</groupId>
            <artifactId>orders</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-compiler</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-maven-plugin</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-ipc</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry-maven-plugin</artifactId>
            <version>${confluent.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>${avro.version}</version>
                <executions>
                    <execution>
                        <id>schemas</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                            <goal>protocol</goal>
                            <goal>idl-protocol</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/resources/avro</sourceDirectory>
                                <excludes>
                                    <exclude>CustomerEvents.avsc</exclude>
                                    <exclude>OrderEvents.avsc</exclude>
                                </excludes>
                            <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry-maven-plugin</artifactId>
                <version>${confluent.version}</version>
                <configuration>
                    <schemaRegistryUrls>
                        <param>http://schema-registry:8081</param>
                    </schemaRegistryUrls>
                    <subjects>
                        <!-- This defines the possible event types on each Kafka topic -->
                        <!-- How this works: -->
                        <!-- There are multiple ways for constraining the event types on a Kafka topic.-->
                        <!-- Schema-message constraints, Subject-schema constraints, or -->
                        <!-- Subject-topic constraints. We are going to use the Subject-topic constraint -->
                        <!-- When using Confluent's (de)serializer for the events on a kafka topic-->
                        <!-- the default strategy to figure out, which schema is used, is called -->
                        <!-- `TopicNameStrategy`. This means, that producer/consumer can ask the -->
                        <!-- schema-registry and based on the Kafka topic's name, they will get -->
                        <!-- the appropriate schema to use. -->
                        <!-- The convention here is, that the message value schema, i.e. the payload -->
                        <!-- in which our event is stored, is registered on the schema-registry as -->
                        <!-- {topicName}-value. -->
                        <!-- Therefore, we are going to define Avro union types are schemas for all -->
                        <!-- our Kafka topics to ensure that only these events can be produced/consumed. -->
                        <customer-value>src/main/resources/avro/CustomerEvents.avsc</customer-value>
                        <order-value>src/main/resources/avro/OrderEvents.avsc</order-value>
                        <CustomerCreated>src/main/resources/avro/CustomerCreatedEvent.avsc</CustomerCreated>
                        <CustomerUpdated>src/main/resources/avro/CustomerUpdatedEvent.avsc</CustomerUpdated>
                        <CustomerDeleted>src/main/resources/avro/CustomerDeletedEvent.avsc</CustomerDeleted>
                        <OrderCreated>src/main/resources/avro/OrderCreatedEvent.avsc</OrderCreated>
                        <OrderDeleted>src/main/resources/avro/OrderDeletedEvent.avsc</OrderDeleted>
                        <OrderUpdated>src/main/resources/avro/OrderUpdatedEvent.avsc</OrderUpdated>
                    </subjects>
                    <schemaTypes>
                        <customer-value>AVRO</customer-value>
                        <order-value>AVRO</order-value>
                        <CustomerCreated>AVRO</CustomerCreated>
                        <CustomerDeleted>AVRO</CustomerDeleted>
                        <CustomerUpdated>AVRO</CustomerUpdated>
                        <OrderCreated>AVRO</OrderCreated>
                        <OrderDeleted>AVRO</OrderDeleted>
                        <OrderUpdated>AVRO</OrderUpdated>
                    </schemaTypes>
                    <references>
                        <customer-value>
                            <reference>
                                <name>edu.hsh.favs.project.escqrs.events.customer.CustomerCreatedEvent</name>
                                <subject>CustomerCreated</subject>
                            </reference>
                            <reference>
                                <name>edu.hsh.favs.project.escqrs.events.customer.CustomerDeletedEvent</name>
                                <subject>CustomerDeleted</subject>
                            </reference>
                            <reference>
                                <name>edu.hsh.favs.project.escqrs.events.customer.CustomerUpdatedEvent</name>
                                <subject>CustomerUpdated</subject>
                            </reference>
                        </customer-value>
                        <order-value>
                            <reference>
                                <name>edu.hsh.favs.project.escqrs.events.order.OrderCreatedEvent</name>
                                <subject>OrderCreated</subject>
                            </reference>
                            <reference>
                                <name>edu.hsh.favs.project.escqrs.events.order.OrderDeletedEvent</name>
                                <subject>OrderDeleted</subject>
                            </reference>
                            <reference>
                                <name>edu.hsh.favs.project.escqrs.events.order.OrderUpdatedEvent</name>
                                <subject>OrderUpdated</subject>
                            </reference>
                        </order-value>
                    </references>
                </configuration>
                <goals>
                    <goal>register</goal>
                </goals>
            </plugin>
        </plugins>
    </build>
</project>