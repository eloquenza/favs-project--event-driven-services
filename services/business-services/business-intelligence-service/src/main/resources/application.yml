postgres.port: 5432
postgres.host: customer-db
postgres.url: jdbc:postgresql://${postgres.host:localhost}:${postgres.port}/
postgres.database-name: postgres
postgres.username: postgres
postgres.password: example
spring:
  profiles:
    active: docker
  application:
    name: business-intelligence-service
  datasource:
    url: ${postgres.url}
    data-username: ${postgres.username}
    data-password: ${postgres.password}
    driver-class-name: org.postgresql.Driver
  cloud:
    stream:
      bindings:
        customer:
          binder: kafka
          destination: customer
          group: customer-group
          contentType: 'application/json'
          consumer:
            concurrency: 1
        order:
          binder: kafka
          destination: order
          group: order-group
          contentType: 'application/json'
          consumer:
            concurrency: 1
server:
  port: ${PORT:${SERVER_PORT:8123}}
logging:
  level:
    root: INFO
    kafka.*: WARN
    org.springframework.*: INFO
    org.apache.kafka.*: WARN
---
spring:
  cloud:
    kubernetes.discovery.enabled: false
    kubernetes.ribbon.enabled: false
    kubernetes.enabled: false
  config:
    activate:
      on-profile: deployment
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
---
spring:
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka
          defaultBrokerPort: 29092
          zkNodes: zookeeper
          defaultZkPort: 32181
    kubernetes.discovery.enabled: false
    kubernetes.ribbon.enabled: false
    kubernetes.enabled: false
  config:
    activate:
      on-profile: docker
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/