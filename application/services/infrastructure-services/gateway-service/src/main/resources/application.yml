spring:
  profiles:
    active: docker
  application:
    name: gateway-service
  main:
    allow-bean-definition-overriding: true
  cloud:
    kubernetes.discovery.enabled: false
    kubernetes.ribbon.enabled: false
    kubernetes.enabled: false
    gateway:
      discovery:
        locator:
          enabled: false
      routes:
        - id: customer-service
          uri: lb://customer-service
          predicates:
            - Path=/customers/**
        - id: product-query-service
          uri: lb://product-query-service
          predicates:
            - Path=/products/**
            - Method=GET
        - id: product-command-service
          uri: lb://product-command-service
          predicates:
            - Path=/products/**
            - Method=POST,PUT
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/orders/**
server:
  port: 9000
management:
  endpoint:
    gateway:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true
logging:
  level:
    root: INFO
    kafka.*: WARN
    org.springframework.*: INFO
    com.memorynotfound: DEBUG
    org.apache.kafka.*: ERROR
---
spring:
  cloud:
    kubernetes.discovery.enabled: false
    kubernetes.ribbon.enabled: false
    kubernetes.enabled: false
  config:
    activate:
      on-profile: development
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
---
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
spring:
  config:
    activate:
      on-profile: docker